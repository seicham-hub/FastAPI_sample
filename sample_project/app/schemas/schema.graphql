scalar DateTime

type Query{
    getUserById:getUserByIdResult
    getAllUser:getAllUserResult
}

type Mutation{
    updateUserById(input: updateUserByIdInput):updateUserByIdResult
}

# error display on browser
type UserError{
    code:Int!
    message:String!
}

type User{
    id:Int
    fullName:String
    email: String
    createdAt: String
    updatedAt: String
    deletedAt: String
}

# user data that can be updated
input UserUpdateInput{
    name:String
    email: String
    updatedAt: DateTime
}

"""
getUserByIdの引数、戻り値
"""

type getUserByIdResult{
    result: User
    userErrors: [UserError]
}
"""
getAllUserの引数、戻り値
"""

type getAllUserResult{
    result: [User]
    userErrors: [UserError]
}


"""
updateUserの引数、戻り値
"""

input updateUserByIdInput{
    id: Int
    updateData: UserUpdateInput
}


type updateUserByIdResult{
    result: Boolean
    userErrors: [UserError]
}